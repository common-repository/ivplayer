{"version":3,"sources":["ivplayer/custom-icons/icons.js","index.js","serviceWorker.js","PublicApp.js","ivplayer/IVPlayer.js","ivplayer/VideoPlayer.js","ivplayer/view/IViewControl.js","ivplayer/notes/IViewNotesControl.js","ivplayer/view/IViewLayout.js","ivplayer/view/IView.js","ivplayer/view/IViewHeader.js","ivplayer/view/IViewBody.js","ivplayer/components/view/IViewTextView.js","ivplayer/components/view/IViewCodeView.js","ivplayer/components/view/IViewLinkView.js","ivplayer/components/view/IViewDocView.js","ivplayer/view/IViewSync.js","ivplayer/notes/IViewNotesLayout.js","ivplayer/notes/IViewNotes.js","ivplayer/notes/IViewHeader.js","ivplayer/notes/IViewBodyNotes.js","ivplayer/components/notes/IViewTextNotesView.js","ivplayer/components/notes/IViewCodeNotesView.js","ivplayer/components/notes/IViewLinkNotesView.js","ivplayer/components/notes/IViewDocNotesView.js","ivplayer/custom-icons/iv-player-icons.ttf","ivplayer/components/view/TimePointView.js"],"names":["createIconSetFromFontello","fontelloConfig","el","document","getElementsByClassName","Object","keys","forEach","element","index","ReactDOM","render","id","getAttribute","timeline","title","serviceWorker","unregister","config","navigator","URL","process","window","location","href","origin","addEventListener","swUrl","isLocalhost","fetch","headers","then","response","contentType","get","status","indexOf","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","error","message","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","this","props","type","require","Component","WIDTH","Dimensions","width","HEIGHT","height","handleIView","ref","iViewRef","handleIViewNote","iViewNoteRef","onSwitcherPress","isIViewClosed","fadeIn","zoomOut","setState","onNoteSwitcherPress","iViewNoteClosed","videoRef","player","subscribeToStateChange","handleStateChange","prevState","currentTime","isFullScreen","isFullscreen","getHHMMSSToSeconds","hms","a","split","getData","filtered","timings","timelineIndex","filter","obj","parseInt","timepoint","getUrl","url","getTitle","getNotes","notes","onTimeLineChange","onTimePointPress","seek","onIViewControlPress","onIViewNoteControlPress","onNoteCreate","note","onNoteRemove","onNotesExport","array","join","blob","Blob","FileSaver","saveAs","videoData","JSON","parse","atob","item","sorted","setTimeout","VIDEO_VIEW_WIDTH","VIDEO_VIEW_HEIGHT","I_VIEW_WIDTH","I_VIEW_HEIGHT","View","style","flex","fluid","playsInline","controls","src","reference","iViewReference","iViewNoteReference","videoHeight","videoWidth","iViewWidth","iViewHeight","data","timeLine","iViewClosed","onIconPress","onNoteIconPress","notesExport","Player","ControlBar","disableCompletely","autoHide","order","BigPlayButton","position","IViewControl","Icon","onPress","name","color","containerStyle","alignItems","justifyContent","size","IViewNoteControl","IViewLayout","iconSize","Animatable","right","backgroundColor","borderRadius","styles","switcherIconContainerStyle","StyleSheet","create","IView","iViewStyle","IViewHeader","HEADER_HEIGHT","FONT_SIZE","headerStyle","center","Text","numberOfLines","fontSize","paddingHorizontal","paddingTop","paddingBottom","params","loadDataViews","views","push","Divider","scrollVewRef","scrollRef","scrollTo","x","y","animated","nextProps","nextState","scrollToEnd","ScrollView","showsVerticalScrollIndicator","padding","IViewTextView","getTextHeight","copyText","isCopied","Clipboard","setString","body","noteText","onMorePressed","isMoreClicked","height_","timeStampSize","flexDirection","copyTextStyle","textStyle","selectable","moreTextStyle","timePoint","alignSelf","timepointStyle","letterSpacing","IViewCodeView","isNoted","Linking","canOpenURL","openURL","Alert","alert","IViewLinkView","OpenURL","getLinkHeight","isMounted","description","image","key","q","method","mode","stringify","res","json","avatarSize","titleAndUrlFontSize","linView","TouchableOpacity","viewStyle","Avatar","source","uri","rounded","avatarContainerStyle","marginHorizontal","titleStyle","urlStyle","ActivityIndicator","fontWeight","lightColorsObject","b","s","d","e","f","g","h","i","j","k","l","m","n","o","p","r","c","t","u","v","w","z","files","IViewDocView","getDocHeight","getFileExtension","extension","pop","includes","toLowerCase","getIconColor","ext","letter","charAt","length","getFileName","iconSizeDownload","bottomViewStyle","nameStyle","link","createElement","download","click","marginLeft","flexGrow","imageStyle","resizeMode","SYNC_HEIGHT","buttonGroupHeight","buttonGroupTitleSize","textHeight","syncViewStyle","syncTextStyle","ButtonGroup","selectedIndex","buttons","syncButtonGroupContainerStyle","selectedButtonStyle","innerBorderStyle","buttonStyle","syncButtonGroupTitleStyle","margin","borderWidth","IViewNotesLayout","left","bottom","marginBottom","iViewNotesClosed","IViewNotes","onRemoveNote","removeTextStyle","module","exports","getSecondsInReadableFormat","sec_num","hours","Math","floor","minutes","seconds"],"mappings":"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","file":"static/js/main.de280040.chunk.js","sourcesContent":["import { createIconSetFromFontello } from 'react-native-vector-icons';\nimport fontelloConfig from './config.json';\nconst Icon = createIconSetFromFontello(fontelloConfig, 'iv-player-icons');\nexport default Icon;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\n// import App from './App'\n// ReactDOM.render(<App />, document.getElementById('iv-player-root'))\n\nimport PublicApp from './PublicApp'\nconst el = document.getElementsByClassName('iv-player-front')\nObject.keys(el).forEach((element, index) => {\n  ReactDOM.render(\n    <PublicApp\n      id={el[element].getAttribute('data-id')}\n      timeline={el[element].getAttribute('data-timeline')}\n      title={el[element].getAttribute('data-title')}\n    />,\n    el[element],\n  )\n})\nserviceWorker.unregister()\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react'\nimport IVPlayer from './ivplayer/IVPlayer'\n\nimport './ivplayer/styles/video-react.css'\n\nclass PublicApp extends Component {\n  render () {\n    console.log(this.props.title)\n    console.log(this.props.id)\n    console.log(this.props.timeline)\n\n    return (\n      <>\n        <style type='text/css'>{`\n        @font-face {\n          font-family: 'iv-player-icons';\n          src: url(${require('./ivplayer/custom-icons/iv-player-icons.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'MaterialIcons';\n          src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'FontAwesome';\n          src: url(${require('react-native-vector-icons/Fonts/FontAwesome.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'FontAwesome5_Brands';\n          src: url(${require('react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf')}) format('truetype');\n        }\n        @font-face {\n          font-family: 'FontAwesome5_Regular';\n          src: url(${require('react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf')}) format('truetype');\n        }\n       @font-face {\n          font-family: 'FontAwesome5_Solid';\n          src: url(${require('react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf')}) format('truetype');\n        }\n      `}</style>\n        <IVPlayer\n          title={this.props.title}\n          id={this.props.id}\n          timeline={this.props.timeline}\n        />\n      </>\n    )\n  }\n}\n\nexport default PublicApp\n","import React, {Component} from 'react'\nimport {View, Dimensions} from 'react-native'\nimport reject from 'lodash/reject'\nimport orderBy from 'lodash/orderBy'\nimport map from 'lodash/map'\nimport forEach from 'lodash/forEach'\nimport cloneDeep from 'lodash/cloneDeep'\n\nimport VideoPlayer from './VideoPlayer'\n\nimport FileSaver from 'file-saver'\n\nconst WIDTH = Dimensions.get('window').width\nconst HEIGHT = Dimensions.get('screen').height\n\nclass IVPlayer extends Component {\n  constructor (props) {\n    super(props)\n    const videoData = JSON.parse(atob(this.props.timeline))\n    let timings = cloneDeep(videoData.timings)\n    forEach(timings, item => {\n      item.timepoint = this.getHHMMSSToSeconds(item.timepoint + '')\n    })\n    let sorted = orderBy(timings, ['timepoint'], ['asc'])\n    this.state = {\n      isIViewClosed: false,\n      iViewNoteClosed: true,\n      currentTime: 0,\n      timelineIndex: 0,\n      isFullScreen: false,\n      notes: [],\n      url: videoData.url,\n      timings: sorted,\n      title: this.props.title,\n    }\n  }\n  handleIView = ref => {\n    this.iViewRef = ref\n  }\n\n  handleIViewNote = ref => {\n    this.iViewNoteRef = ref\n  }\n\n  onSwitcherPress = () => {\n    if (this.state.isIViewClosed) {\n      this.iViewRef.fadeIn(1000)\n    } else {\n      this.iViewRef.zoomOut(1000)\n    }\n    this.setState({\n      isIViewClosed: !this.state.isIViewClosed,\n    })\n  }\n\n  onNoteSwitcherPress = () => {\n    if (!this.state.iViewNoteClosed) {\n      this.iViewNoteRef.zoomOut(1000)\n    } else {\n      this.iViewNoteRef.fadeIn(1000)\n    }\n    this.setState({\n      iViewNoteClosed: !this.state.iViewNoteClosed,\n    })\n  }\n\n  videoRef = ref => {\n    this.player = ref\n    this.player.subscribeToStateChange(this.handleStateChange)\n  }\n\n  handleStateChange = (status, prevState) => {\n    this.setState({\n      currentTime: status.currentTime,\n      isFullScreen: status.isFullscreen,\n    })\n  }\n\n  getHHMMSSToSeconds = hms => {\n    try {\n      let a = hms.split(':')\n      let seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2]\n      return seconds * 1000\n    } catch (error) {\n      return 0\n    }\n  }\n\n  getData = () => {\n    let filtered = this.state.timings\n    if (this.state.timelineIndex === 0) {\n      filtered = this.state.timings.filter((obj, index) => {\n        if (\n          parseInt(obj.timepoint / 1000) <= parseInt(this.state.currentTime)\n        ) {\n          return true\n        } else {\n          return false\n        }\n      })\n    }\n    return filtered\n  }\n\n  getUrl = () => {\n    return this.state.url\n  }\n\n  getTitle = () => {\n    return this.state.title\n  }\n\n  getNotes = () => {\n    return this.state.notes\n  }\n\n  onTimeLineChange = index => {\n    this.setState({\n      timelineIndex: index,\n    })\n  }\n\n  onTimePointPress = timepoint => {\n    this.player.seek(timepoint / 1000)\n  }\n\n  onIViewControlPress = () => {\n    this.onSwitcherPress()\n  }\n\n  onIViewNoteControlPress = () => {\n    this.onNoteSwitcherPress()\n  }\n\n  onNoteCreate = note => {\n    if (this.state.iViewNoteClosed) {\n      this.iViewNoteRef.fadeIn(1000)\n    }\n    this.setState({\n      notes: [...this.state.notes, note],\n      iViewNoteClosed: false,\n    })\n  }\n\n  onNoteRemove = note => {\n    this.setState({\n      notes: reject(this.state.notes, note),\n    })\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      if (this.state.isIViewClosed) {\n        this.iViewRef.zoomOut(1000)\n      } else {\n        this.iViewRef.fadeIn(1000)\n      }\n      if (this.state.iViewNoteClosed) {\n        this.iViewNoteRef.zoomOut(1000)\n      } else {\n        this.iViewNoteRef.fadeIn(1000)\n      }\n    }, 100)\n  }\n\n  onNotesExport = () => {\n    let array = map(this.state.notes, 'body').join('\\n')\n    let blob = new Blob([array], {type: 'text/plain;charset=utf-8'})\n    FileSaver.saveAs(blob, this.getTitle() + '.txt')\n  }\n\n  render () {\n    const VIDEO_VIEW_WIDTH = this.state.isFullScreen ? WIDTH : 800\n\n    const VIDEO_VIEW_HEIGHT = this.state.isFullScreen ? HEIGHT : 450\n\n    const I_VIEW_WIDTH = VIDEO_VIEW_WIDTH / 4\n    const I_VIEW_HEIGHT = VIDEO_VIEW_HEIGHT\n\n    return (\n      <View\n        style={{\n          width: VIDEO_VIEW_WIDTH,\n          flex: 1,\n        }}>\n        <VideoPlayer\n          fluid={false}\n          width={VIDEO_VIEW_WIDTH}\n          height={VIDEO_VIEW_HEIGHT}\n          playsInline\n          controls={true}\n          src={this.getUrl()}\n          title={this.getTitle()}\n          reference={this.videoRef}\n          iViewReference={this.handleIView}\n          iViewNoteReference={this.handleIViewNote}\n          videoHeight={VIDEO_VIEW_HEIGHT}\n          videoWidth={VIDEO_VIEW_WIDTH}\n          iViewWidth={I_VIEW_WIDTH}\n          iViewHeight={I_VIEW_HEIGHT}\n          data={this.getData()}\n          notes={this.getNotes()}\n          iViewNoteClosed={this.state.iViewNoteClosed}\n          timeLine={this.state.timelineIndex}\n          onTimePointPress={this.onTimePointPress}\n          onTimeLineChange={this.onTimeLineChange}\n          iViewClosed={this.state.isIViewClosed}\n          onIconPress={this.onSwitcherPress}\n          onNoteIconPress={this.onNoteSwitcherPress}\n          onIViewControlPress={this.onIViewControlPress}\n          onIViewNoteControlPress={this.onIViewNoteControlPress}\n          onNoteCreate={this.onNoteCreate}\n          onNoteRemove={this.onNoteRemove}\n          notesExport={this.onNotesExport}\n        />\n      </View>\n    )\n  }\n}\n\nexport default IVPlayer\n","import React, {Component} from 'react'\n\nimport {Player, ControlBar, BigPlayButton} from 'video-react'\n\nimport IViewControl from './view/IViewControl'\nimport IViewNotesControl from './notes/IViewNotesControl'\n\nimport IViewLayout from './view/IViewLayout'\n\nimport IViewNotesLayout from './notes/IViewNotesLayout'\n\nclass VideoPlayer extends Component {\n  render () {\n    return (\n      <Player ref={this.props.reference} {...this.props}>\n        <ControlBar disableCompletely={false} autoHide={false}>\n          <IViewControl\n            order={7}\n            iViewClosed={this.props.iViewClosed}\n            onIViewControlPress={this.props.onIViewControlPress}\n          />\n          <IViewNotesControl\n            order={3}\n            iViewNoteClosed={this.props.iViewNoteClosed}\n            onIViewNoteControlPress={this.props.onIViewNoteControlPress}\n          />\n        </ControlBar>\n        <BigPlayButton position={'center'} />\n        <IViewLayout order={2} {...this.props} />\n        <IViewNotesLayout order={2} {...this.props} />\n      </Player>\n    )\n  }\n}\n\nexport default VideoPlayer\n","import React, {Component} from 'react'\nimport {Icon} from 'react-native-elements'\n\nexport default class IViewControl extends Component {\n  render () {\n    return (\n      <Icon\n        onPress={this.props.onIViewControlPress}\n        name={'magic'}\n        color={this.props.iViewClosed ? 'grey' : 'white'}\n        containerStyle={{\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        type='font-awesome-5'\n        size={15}\n      />\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {Icon} from 'react-native-elements'\n\nexport default class IViewNoteControl extends Component {\n  render () {\n    return (\n      <Icon\n        onPress={this.props.onIViewNoteControlPress}\n        name={'pen-square'}\n        color={this.props.iViewNoteClosed ? 'grey' : 'white'}\n        containerStyle={{\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        type='font-awesome-5'\n        size={15}\n      />\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {StyleSheet} from 'react-native'\n\nimport {Icon} from 'react-native-elements'\nimport * as Animatable from 'react-native-animatable'\n\nimport IView from './IView'\n\nexport default class IViewLayout extends Component {\n  render () {\n    const videoHeight = this.props.iViewHeight\n    const iconHeight = videoHeight / 15\n    const iconSize = iconHeight / 2\n    return (\n      <Animatable.View\n        ref={this.props.iViewReference}\n        style={{\n          position: 'absolute',\n          right: 0,\n          height: (this.props.iViewHeight * 14) / 15,\n          width: this.props.iViewWidth,\n          backgroundColor: '#00000050',\n          borderRadius: 5,\n        }}>\n        <Icon\n          size={iconSize}\n          name={this.props.iViewClosed ? 'times' : 'times'}\n          type={'font-awesome-5'}\n          color={'white'}\n          onPress={this.props.onIconPress}\n          containerStyle={styles.switcherIconContainerStyle}\n        />\n        <IView\n          videoHeight={this.props.videoHeight}\n          videoWidth={this.props.videoWidth}\n          iViewWidth={this.props.iViewWidth}\n          iViewHeight={this.props.iViewHeight}\n          onNoteCreate={this.props.onNoteCreate}\n          data={this.props.data}\n          notes={this.props.notes}\n          timeLine={this.props.timeLine}\n          onTimePointPress={this.props.onTimePointPress}\n          onTimeLineChange={this.props.onTimeLineChange}\n          title={this.props.title}\n        />\n      </Animatable.View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  switcherIconContainerStyle: {\n    backgroundColor: '#ffffff50',\n    borderRadius: 10,\n  },\n})\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport IViewHeader from './IViewHeader'\nimport IViewBody from './IViewBody'\nimport IViewSync from './IViewSync'\n\nclass IView extends Component {\n  render () {\n    const {iViewWidth, iViewHeight, videoHeight, videoWidth} = this.props\n\n    return (\n      <View style={styles.iViewStyle}>\n        <IViewHeader\n          title={this.props.title}\n          iViewWidth={iViewWidth}\n          videoHeight={videoHeight}\n        />\n        <IViewSync\n          iViewHeight={iViewHeight}\n          iViewWidth={iViewWidth}\n          videoHeight={videoHeight}\n          videoWidth={videoWidth}\n          timeLine={this.props.timeLine}\n          onTimeLineChange={this.props.onTimeLineChange}\n        />\n        <IViewBody\n          onTimePointPress={this.props.onTimePointPress}\n          data={this.props.data}\n          notes={this.props.notes}\n          iViewWidth={iViewWidth}\n          videoHeight={videoHeight}\n          videoWidth={videoWidth}\n          onNoteCreate={this.props.onNoteCreate}\n          onNoteRemove={this.props.onNoteRemove}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  iViewStyle: {},\n})\n\nexport default IView\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text} from 'react-native-elements'\n\nclass IViewHeader extends Component {\n  render () {\n    const {videoHeight} = this.props\n    const HEADER_HEIGHT = videoHeight / 15\n    const FONT_SIZE = HEADER_HEIGHT / 2.5\n    return (\n      <View\n        style={[\n          styles.headerStyle,\n          {\n            height: HEADER_HEIGHT,\n            alignItems: this.props.center ? 'center' : 'flex-start',\n          },\n        ]}>\n        <Text\n          numberOfLines={1}\n          style={{\n            fontSize: FONT_SIZE,\n            color: 'white',\n          }}>\n          {this.props.title}\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerStyle: {\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingTop: 5,\n    paddingBottom: 2,\n  },\n})\n\nexport default IViewHeader\n","import React, {Component} from 'react'\n\nimport {ScrollView, View} from 'react-native'\n\nimport {Divider, Icon} from 'react-native-elements'\n\nimport isEqual from 'lodash/isEqual'\n\nimport IViewTextView from '../components/view/IViewTextView'\nimport IViewCodeView from '../components/view/IViewCodeView'\nimport IViewLinkView from '../components/view/IViewLinkView'\nimport IViewDocView from '../components/view/IViewDocView'\n\nclass IViewBody extends Component {\n  constructor (params) {\n    super(params)\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    if (\n      !isEqual(this.props.data, nextProps.data) ||\n      !isEqual(this.props.notes, nextProps.notes) ||\n      !isEqual(this.props.videoHeight, nextProps.videoHeight)\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  loadDataViews = () => {\n    const {data} = this.props\n    let views = []\n    data.forEach(element => {\n      switch (element.type) {\n        case 0:\n          views.push(\n            <IViewTextView\n              onTimePointPress={this.props.onTimePointPress}\n              data={element}\n              notes={this.props.notes}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteCreate={this.props.onNoteCreate}\n            />,\n          )\n          break\n        case 1:\n          views.push(\n            <IViewLinkView\n              onTimePointPress={this.props.onTimePointPress}\n              data={element}\n              notes={this.props.notes}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteCreate={this.props.onNoteCreate}\n            />,\n          )\n          break\n        case 2:\n          views.push(\n            <IViewDocView\n              onTimePointPress={this.props.onTimePointPress}\n              data={element}\n              notes={this.props.notes}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteCreate={this.props.onNoteCreate}\n            />,\n          )\n          break\n        case 3:\n          views.push(\n            <IViewCodeView\n              onTimePointPress={this.props.onTimePointPress}\n              data={element}\n              notes={this.props.notes}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteCreate={this.props.onNoteCreate}\n            />,\n          )\n          break\n\n        default:\n          break\n      }\n      views.push(\n        <Divider style={{height: 10, backgroundColor: 'transparent'}} />,\n      )\n    })\n    return views\n  }\n\n  componentDidUpdate () {\n    this.scrollRef.scrollToEnd()\n  }\n\n  scrollVewRef = ref => {\n    this.scrollRef = ref\n  }\n\n  onPress = () => {\n    this.scrollRef.scrollTo({x: 0, y: 0, animated: true})\n  }\n\n  render () {\n    const videoHeight = this.props.videoHeight\n    const height = (videoHeight * 11) / 15\n    return (\n      <View>\n        <ScrollView\n          ref={this.scrollVewRef}\n          showsVerticalScrollIndicator={false}\n          style={{height: height - 30, padding: 10}}>\n          {this.loadDataViews()}\n        </ScrollView>\n        <Icon\n          onPress={this.onPress}\n          name='chevron-circle-up'\n          color='white'\n          type='font-awesome-5'\n          size={15}\n          containerStyle={{\n            padding: 10,\n          }}\n        />\n      </View>\n    )\n  }\n}\n\nexport default IViewBody\n","import React, {Component} from 'react'\nimport {StyleSheet, View, Clipboard} from 'react-native'\nimport {Text} from 'react-native-elements'\nimport TimePointView from './TimePointView'\n\nimport find from 'lodash/find'\n\nclass IViewTextView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isMoreClicked: false,\n      isCopied: false,\n    }\n  }\n\n  getTextHeight = height => {\n    return height / 4\n  }\n\n  copyText = () => {\n    this.setState(\n      {\n        isCopied: true,\n      },\n      () => Clipboard.setString(this.props.data.body),\n    )\n    setTimeout(() => {\n      this.setState({\n        isCopied: false,\n      })\n    }, 1000)\n  }\n  noteText = () => {\n    this.props.onNoteCreate(this.props.data)\n  }\n\n  onMorePressed = () => {\n    this.setState({\n      isMoreClicked: !this.state.isMoreClicked,\n    })\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getTextHeight(height)\n    const fontSize = height_ / 10\n    const timeStampSize = height_ / 16\n\n    return (\n      <View\n        style={{\n          backgroundColor: 'wheat',\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            padding: 1,\n          }}>\n          <Text\n            onPress={this.noteText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: fontSize / 1.5,\n              },\n            ]}>\n            {!find(this.props.notes, this.props.data) ? 'Note' : 'Noted'}\n          </Text>\n          <Text\n            onPress={this.copyText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: fontSize / 1.5,\n              },\n            ]}>\n            {!this.state.isCopied ? 'Copy' : 'Copied'}\n          </Text>\n        </View>\n        <Text\n          onPress={this.copyText}\n          numberOfLines={this.state.isMoreClicked ? null : 4}\n          style={[\n            styles.textStyle,\n            {\n              fontSize: fontSize,\n            },\n          ]}>\n          {this.props.data.body}\n        </Text>\n        <Text\n          selectable={true}\n          style={[\n            styles.moreTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}\n          onPress={this.onMorePressed}>\n          {!this.state.isMoreClicked ? 'Read more' : 'Show less'}\n        </Text>\n        <TimePointView\n          timePoint={this.props.data.timepoint}\n          timeStampSize={timeStampSize}\n          onTimePointPress={this.props.onTimePointPress}\n          color={'brown'}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  copyTextStyle: {\n    backgroundColor: 'white',\n    padding: 2,\n    borderRadius: 3,\n    color: 'black',\n    alignSelf: 'flex-end',\n  },\n  timepointStyle: {\n    alignSelf: 'flex-end',\n    color: 'grey',\n  },\n  textStyle: {\n    color: 'black',\n    letterSpacing: 0.5,\n  },\n  moreTextStyle: {\n    color: '#007599',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default IViewTextView\n","import React, {Component} from 'react'\nimport {StyleSheet, View, Clipboard} from 'react-native'\nimport {Text} from 'react-native-elements'\nimport TimePointView from './TimePointView'\nimport find from 'lodash/find'\n\nclass IViewCodeView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isMoreClicked: false,\n      isCopied: false,\n      isNoted: false,\n    }\n  }\n\n  getTextHeight = height => {\n    return height / 4\n  }\n\n  copyText = () => {\n    this.setState(\n      {\n        isCopied: true,\n      },\n      () => Clipboard.setString(this.props.data.body),\n    )\n    setTimeout(() => {\n      this.setState({\n        isCopied: false,\n      })\n    }, 1000)\n  }\n\n  noteText = () => {\n    this.props.onNoteCreate(this.props.data)\n  }\n\n  onMorePressed = () => {\n    this.setState({\n      isMoreClicked: !this.state.isMoreClicked,\n    })\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getTextHeight(height)\n    const fontSize = height_ / 10\n    const timeStampSize = height_ / 16\n\n    return (\n      <View\n        style={{\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n          backgroundColor: '#292d3e',\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            padding: 1,\n          }}>\n          <Text\n            onPress={this.noteText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: fontSize / 1.5,\n              },\n            ]}>\n            {!find(this.props.notes, this.props.data) ? 'Note' : 'Noted'}\n          </Text>\n          <Text\n            onPress={this.copyText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: fontSize / 1.5,\n              },\n            ]}>\n            {!this.state.isCopied ? 'Copy' : 'Copied'}\n          </Text>\n        </View>\n        <Text\n          onPress={this.copyText}\n          numberOfLines={this.state.isMoreClicked ? null : 4}\n          style={[\n            styles.textStyle,\n            {\n              fontSize: fontSize,\n            },\n          ]}>\n          {this.props.data.body}\n        </Text>\n        <Text\n          selectable={true}\n          style={[\n            styles.moreTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}\n          onPress={this.onMorePressed}>\n          {!this.state.isMoreClicked ? 'Read more' : 'Show less'}\n        </Text>\n        <TimePointView\n          timePoint={this.props.data.timepoint}\n          timeStampSize={timeStampSize}\n          onTimePointPress={this.props.onTimePointPress}\n          color={'silver'}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  copyTextStyle: {\n    backgroundColor: '#1c1e21',\n    padding: 5,\n    borderRadius: 3,\n    color: 'white',\n    alignSelf: 'flex-end',\n  },\n  timepointStyle: {\n    alignSelf: 'flex-end',\n    color: 'grey',\n  },\n  textStyle: {\n    color: 'white',\n    letterSpacing: 0.5,\n  },\n  moreTextStyle: {\n    color: 'gold',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default IViewCodeView\n","/* eslint-disable no-template-curly-in-string */\nimport React, {Component} from 'react'\nimport {\n  StyleSheet,\n  View,\n  Linking,\n  Alert,\n  TouchableOpacity,\n  ActivityIndicator,\n  Clipboard,\n} from 'react-native'\nimport {Text, Avatar} from 'react-native-elements'\n\nimport TimePointView from './TimePointView'\n\nimport find from 'lodash/find'\n\nasync function OpenURL (url) {\n  const supported = await Linking.canOpenURL(url)\n  if (supported) {\n    await Linking.openURL(url)\n  } else {\n    Alert.alert('No app to open this URL: ${url}')\n  }\n}\n\nclass IViewLinkView extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isMounted: false,\n      title: '',\n      description: '',\n      url: '',\n      image: '',\n      isCopied: false,\n      isNoted: false,\n    }\n  }\n  componentDidMount () {\n    var data = {\n      key: '14f4e0102f66b176837f885406f83d6e',\n      q: this.props.data.body,\n    }\n    fetch('https://api.linkpreview.net', {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(data),\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          isMounted: true,\n          title: response.title,\n          description: response.description,\n          url: response.url,\n          image: response.image,\n        })\n      })\n  }\n\n  onPress = () => {\n    OpenURL(this.state.url)\n  }\n\n  getLinkHeight = height => {\n    return height / 8\n  }\n  copyText = () => {\n    this.setState(\n      {\n        isCopied: true,\n      },\n      () => Clipboard.setString(this.props.data.body),\n    )\n    setTimeout(() => {\n      this.setState({\n        isCopied: false,\n      })\n    }, 1000)\n  }\n\n  noteText = () => {\n    this.setState({\n      isNoted: true,\n    })\n    this.props.onNoteCreate(this.props.data)\n  }\n\n  render () {\n    const {width, height} = this.props\n    const height_ = this.getLinkHeight(height)\n    const avatarSize = height_ / 2.5\n    const timeStampSize = height_ / 8\n    const titleAndUrlFontSize = height_ / 6\n\n    const linView = width - avatarSize - 40\n\n    return (\n      <View\n        style={{\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n          backgroundColor: '#167D7F',\n        }}>\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            padding: 1,\n          }}>\n          <Text\n            onPress={this.noteText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: titleAndUrlFontSize / 1.5,\n              },\n            ]}>\n            {!find(this.props.notes, this.props.data) ? 'Note' : 'Noted'}\n          </Text>\n          <Text\n            onPress={this.copyText}\n            style={[\n              styles.copyTextStyle,\n              {\n                fontSize: titleAndUrlFontSize / 1.5,\n              },\n            ]}>\n            {!this.state.isCopied ? 'Copy' : 'Copied'}\n          </Text>\n        </View>\n        {this.state.isMounted ? (\n          <TouchableOpacity onPress={this.onPress}>\n            <View style={styles.viewStyle}>\n              <Avatar\n                source={{\n                  uri: this.state.image,\n                }}\n                rounded\n                avatarContainerStyle={styles.avatarContainerStyle}\n                size={avatarSize}\n              />\n              <View\n                style={{\n                  marginHorizontal: 10,\n                  width: linView,\n                }}>\n                <Text\n                  numberOfLines={1}\n                  style={[\n                    styles.titleStyle,\n                    {\n                      fontSize: titleAndUrlFontSize,\n                    },\n                  ]}>\n                  {this.state.title}\n                </Text>\n                <Text\n                  numberOfLines={1}\n                  style={[\n                    styles.urlStyle,\n                    {\n                      fontSize: titleAndUrlFontSize,\n                    },\n                  ]}>\n                  {this.state.url}\n                </Text>\n              </View>\n            </View>\n          </TouchableOpacity>\n        ) : (\n          <ActivityIndicator />\n        )}\n\n        <TimePointView\n          timePoint={this.props.data.timepoint}\n          timeStampSize={timeStampSize}\n          onTimePointPress={this.props.onTimePointPress}\n          color={'black'}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  copyTextStyle: {\n    backgroundColor: 'white',\n    padding: 2,\n    borderRadius: 3,\n    color: 'black',\n    alignSelf: 'flex-end',\n  },\n  timepointStyle: {\n    alignSelf: 'flex-end',\n    color: 'grey',\n  },\n  avatarContainerStyle: {},\n  viewStyle: {\n    flexDirection: 'row',\n  },\n  urlStyle: {color: 'gold'},\n  titleStyle: {\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  textStyle: {\n    color: '#243447',\n  },\n})\n\nexport default IViewLinkView\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text, Icon} from 'react-native-elements'\nimport TimePointView from './TimePointView'\n\nimport FileIcon from '../../custom-icons/icons'\nimport find from 'lodash/find'\n\nconst lightColorsObject = {\n  a: '#7678ed',\n  b: '#941b0c',\n  s: '#a7c957',\n  d: '#6a6b83',\n  e: '#7b2cbf',\n  f: '#f43f30',\n  g: '#1fa6b8',\n  h: '#ff6b6b',\n  i: '#84a98c',\n  j: '#9f86c0',\n  k: '#ed4f7a',\n  l: '#e63946',\n  m: '#00bbf9',\n  n: '#1a936f',\n  o: '#d08c60',\n  p: '#3bceac',\n  q: '#76949f',\n  r: '#808000',\n  c: '#0067b8',\n  t: '#df7373',\n  u: '#0077b6',\n  v: '#f77f00',\n  w: '#02c39a',\n  x: '#f3722c',\n  y: '#5c677d',\n  z: '#00b4d8',\n  '3': 'yellow',\n  '4': 'purple',\n}\n\nconst files = [\n  '7zip',\n  'aac',\n  'ai',\n  'apk',\n  'asc',\n  'avi',\n  'css',\n  'csv',\n  'dll',\n  'dmg',\n  'dng',\n  'doc',\n  'eps',\n  'exe',\n  'fff',\n  'file',\n  'flv',\n  'gif',\n  'gis',\n  'gpx',\n  'heic',\n  'html',\n  'java',\n  'jp2',\n  'jpg',\n  'kml',\n  'kmz',\n  'mov',\n  'mp3',\n  'mpg',\n  'nmea',\n  'ogg',\n  'osm',\n  'otf',\n  'pdf',\n  'ppt',\n  'ps',\n  'psd',\n  'py',\n  'qti',\n  'rar',\n  'raw',\n  'tar',\n  'tif',\n  'ttf',\n  'txt',\n  'wav',\n  'woff',\n  'xls',\n  'zip',\n]\n\nclass IViewDocView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isNoted: false,\n    }\n  }\n\n  noteText = () => {\n    this.setState({\n      isNoted: true,\n    })\n    this.props.onNoteCreate(this.props.data)\n  }\n\n  getDocHeight = height => {\n    return height / 8\n  }\n\n  getFileExtension = () => {\n    const path = this.props.data.body\n    const extension = path.split('.').pop()\n    if (files.includes(extension.toLowerCase())) {\n      return extension.toLowerCase()\n    } else {\n      return 'file'\n    }\n  }\n\n  getIconColor = () => {\n    const ext = this.getFileExtension()\n    const letter = ext.charAt(ext.length - 1)\n    return lightColorsObject[letter]\n  }\n\n  getFileName = () => {\n    let path = this.props.data.body\n    return path.split('/').pop()\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getDocHeight(height)\n    const fontSize = height_ / 6\n    const iconSize = height_ / 3\n    const iconSizeDownload = height_ / 6\n    const timeStampSize = height_ / 8\n    return (\n      <View style={styles.viewStyle}>\n        <Text\n          onPress={this.noteText}\n          style={[\n            styles.copyTextStyle,\n            {\n              fontSize: fontSize / 1.2,\n            },\n          ]}>\n          {!find(this.props.notes, this.props.data) ? 'Note' : 'Noted'}\n        </Text>\n\n        <View style={styles.bottomViewStyle}>\n          <FileIcon\n            name={this.getFileExtension()}\n            type='iv-player-icons'\n            size={iconSize}\n            color={this.getIconColor()}\n          />\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.nameStyle,\n              {\n                fontSize: fontSize,\n              },\n            ]}>\n            {this.getFileName()}\n          </Text>\n          <Icon\n            onPress={() => {\n              var link = document.createElement('a')\n              link.download = this.getFileName()\n              link.href = this.props.data.body\n              link.click()\n            }}\n            name='download'\n            type='font-awesome-5'\n            size={iconSizeDownload}\n            color='black'\n          />\n        </View>\n        <TimePointView\n          timePoint={this.props.data.timepoint}\n          timeStampSize={timeStampSize}\n          onTimePointPress={this.props.onTimePointPress}\n          color={'black'}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  copyTextStyle: {\n    backgroundColor: 'white',\n    padding: 2,\n    borderRadius: 3,\n    color: 'black',\n    alignSelf: 'flex-start',\n  },\n  bottomViewStyle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  nameStyle: {\n    color: 'black',\n    marginLeft: 10,\n    flexGrow: 1,\n  },\n  viewStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingTop: 5,\n    paddingBottom: 2,\n    backgroundColor: '#F9F1F0',\n  },\n  imageStyle: {\n    resizeMode: 'contain',\n  },\n})\n\nexport default IViewDocView\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {ButtonGroup, Text} from 'react-native-elements'\n\nclass IView extends Component {\n  render () {\n    const {iViewHeight, videoHeight} = this.props\n    const SYNC_HEIGHT = iViewHeight / 15\n    const buttonGroupHeight = videoHeight / 15\n    const buttonGroupTitleSize = buttonGroupHeight / 3\n    const textHeight = buttonGroupHeight / 2.5\n\n    return (\n      <View\n        style={[\n          styles.syncViewStyle,\n          {\n            height: SYNC_HEIGHT,\n          },\n        ]}>\n        <Text\n          style={[\n            styles.syncTextStyle,\n            {\n              fontSize: textHeight,\n            },\n          ]}>\n          Sync content with video ?\n        </Text>\n        <ButtonGroup\n          onPress={this.props.onTimeLineChange}\n          selectedIndex={this.props.timeLine}\n          buttons={['Yes', 'No']}\n          containerStyle={[\n            styles.syncButtonGroupContainerStyle,\n            {\n              height: SYNC_HEIGHT,\n            },\n          ]}\n          selectedButtonStyle={{\n            backgroundColor: 'transparent',\n          }}\n          innerBorderStyle={{\n            width: 0,\n          }}\n          buttonStyle={{\n            height: SYNC_HEIGHT,\n          }}\n          textStyle={[\n            styles.syncButtonGroupTitleStyle,\n            {\n              fontSize: buttonGroupTitleSize,\n            },\n          ]}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  syncButtonGroupContainerStyle: {\n    margin: 0,\n    flex: 0.3,\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n  },\n  syncButtonGroupTitleStyle: {\n    fontWeight: 'normal',\n  },\n  syncViewStyle: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingTop: 5,\n    paddingBottom: 2,\n  },\n  syncTextStyle: {\n    fontWeight: 'normal',\n    flex: 0.7,\n    color: 'white',\n  },\n})\n\nexport default IView\n","import React, {Component} from 'react'\nimport {StyleSheet} from 'react-native'\n\nimport {Icon} from 'react-native-elements'\nimport * as Animatable from 'react-native-animatable'\n\nimport IViewNotes from './IViewNotes'\n\nexport default class IViewNotesLayout extends Component {\n  render () {\n    const videoHeight = this.props.iViewHeight\n    const iconHeight = videoHeight / 15\n    const iconSize = iconHeight / 2\n    return (\n      <Animatable.View\n        ref={this.props.iViewNoteReference}\n        style={{\n          position: 'absolute',\n          left: 0,\n          bottom: 0,\n          height: (this.props.iViewHeight * 10) / 15,\n          width: this.props.iViewWidth,\n          backgroundColor: 'wheat',\n          borderRadius: 5,\n          marginBottom: (this.props.iViewHeight * 1) / 15,\n        }}>\n        <Icon\n          size={iconSize}\n          name={this.props.iViewNotesClosed ? 'times' : 'times'}\n          type={'font-awesome-5'}\n          color={'black'}\n          onPress={this.props.onNoteIconPress}\n          containerStyle={styles.switcherIconContainerStyle}\n        />\n        <IViewNotes\n          videoHeight={this.props.videoHeight}\n          videoWidth={this.props.videoWidth}\n          iViewWidth={this.props.iViewWidth}\n          iViewHeight={this.props.iViewHeight}\n          notes={this.props.notes}\n          timeLine={this.props.timeLine}\n          onTimePointPress={this.props.onTimePointPress}\n          onTimeLineChange={this.props.onTimeLineChange}\n          onNoteRemove={this.props.onNoteRemove}\n          notesExport={this.props.notesExport}\n        />\n      </Animatable.View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  switcherIconContainerStyle: {\n    backgroundColor: '#ffffff50',\n    borderRadius: 10,\n  },\n})\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport IViewHeader from './IViewHeader'\nimport IViewBodyNotes from './IViewBodyNotes'\n\nclass IViewNotes extends Component {\n  render () {\n    const {iViewWidth, videoHeight, videoWidth} = this.props\n\n    return (\n      <View style={styles.iViewStyle}>\n        <IViewHeader\n          title={'Notes'}\n          iViewWidth={iViewWidth}\n          videoHeight={videoHeight}\n          center={true}\n          notesExport={this.props.notesExport}\n        />\n        <IViewBodyNotes\n          onTimePointPress={this.props.onTimePointPress}\n          notes={this.props.notes}\n          iViewWidth={iViewWidth}\n          videoHeight={videoHeight}\n          videoWidth={videoWidth}\n          onNoteRemove={this.props.onNoteRemove}\n        />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  iViewStyle: {},\n})\n\nexport default IViewNotes\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text} from 'react-native-elements'\n\nclass IViewHeader extends Component {\n  render () {\n    const {videoHeight} = this.props\n    const HEADER_HEIGHT = videoHeight / 15\n    const FONT_SIZE = HEADER_HEIGHT / 2.5\n    return (\n      <View\n        style={[\n          styles.headerStyle,\n          {\n            height: HEADER_HEIGHT,\n            justifyContent: this.props.center ? 'space-between' : 'flex-start',\n            flexDirection: 'row',\n          },\n        ]}>\n        <Text\n          numberOfLines={1}\n          style={{\n            fontSize: FONT_SIZE,\n            color: 'brown',\n          }}>\n          {this.props.title}\n        </Text>\n        <Text\n          onPress={this.props.notesExport}\n          numberOfLines={1}\n          style={{\n            fontSize: FONT_SIZE,\n            color: 'brown',\n            backgroundColor: 'white',\n            padding: 2,\n          }}>\n          Download\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerStyle: {\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingTop: 5,\n    paddingBottom: 2,\n  },\n})\n\nexport default IViewHeader\n","import React, {Component} from 'react'\n\nimport {ScrollView, View} from 'react-native'\n\nimport {Divider, Icon} from 'react-native-elements'\n\nimport isEqual from 'lodash/isEqual'\n\nimport IViewTextNotesView from '../components/notes/IViewTextNotesView'\nimport IViewCodeNotesView from '../components/notes/IViewCodeNotesView'\nimport IViewLinkNotesView from '../components/notes/IViewLinkNotesView'\nimport IViewDocNotesView from '../components/notes/IViewDocNotesView'\n\nclass IViewBodyNotes extends Component {\n  shouldComponentUpdate (nextProps, nextState) {\n    if (!isEqual(this.props, nextProps)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  loadDataViews = () => {\n    const {notes} = this.props\n    let views = []\n    notes.forEach(note => {\n      switch (note.type) {\n        case 0:\n          views.push(\n            <IViewTextNotesView\n              onTimePointPress={this.props.onTimePointPress}\n              note={note}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteRemove={this.props.onNoteRemove}\n            />,\n          )\n          break\n        case 1:\n          views.push(\n            <IViewLinkNotesView\n              onTimePointPress={this.props.onTimePointPress}\n              note={note}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteRemove={this.props.onNoteRemove}\n            />,\n          )\n          break\n        case 2:\n          views.push(\n            <IViewDocNotesView\n              onTimePointPress={this.props.onTimePointPress}\n              note={note}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteRemove={this.props.onNoteRemove}\n            />,\n          )\n          break\n        case 3:\n          views.push(\n            <IViewCodeNotesView\n              onTimePointPress={this.props.onTimePointPress}\n              note={note}\n              width={this.props.iViewWidth}\n              height={this.props.videoHeight}\n              videoHeight={this.props.videoHeight}\n              videoWidth={this.props.videoWidth}\n              onNoteRemove={this.props.onNoteRemove}\n            />,\n          )\n          break\n\n        default:\n          break\n      }\n      views.push(\n        <Divider style={{height: 10, backgroundColor: 'transparent'}} />,\n      )\n    })\n    return views\n  }\n\n  componentDidUpdate () {\n    this.scrollRef.scrollToEnd()\n  }\n\n  scrollVewRef = ref => {\n    this.scrollRef = ref\n  }\n\n  onPress = () => {\n    this.scrollRef.scrollTo({x: 0, y: 0, animated: true})\n  }\n\n  render () {\n    const videoHeight = this.props.videoHeight\n    const height = (videoHeight * 8) / 15\n    return (\n      <View>\n        <ScrollView\n          ref={this.scrollVewRef}\n          showsVerticalScrollIndicator={false}\n          style={{height: height - 30, padding: 10}}>\n          {this.loadDataViews()}\n        </ScrollView>\n        <Icon\n          onPress={this.onPress}\n          name='chevron-circle-up'\n          color='brown'\n          type='font-awesome-5'\n          size={15}\n          containerStyle={{\n            padding: 10,\n          }}\n        />\n      </View>\n    )\n  }\n}\n\nexport default IViewBodyNotes\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text} from 'react-native-elements'\n\nclass IViewTextView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isMoreClicked: false,\n    }\n  }\n\n  getTextHeight = height => {\n    return height / 4\n  }\n\n  onMorePressed = () => {\n    this.setState({\n      isMoreClicked: !this.state.isMoreClicked,\n    })\n  }\n\n  onRemoveNote = () => {\n    this.props.onNoteRemove(this.props.note)\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getTextHeight(height)\n    const fontSize = height_ / 10\n\n    return (\n      <View\n        style={{\n          backgroundColor: 'white',\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n        }}>\n        <Text\n          onPress={this.onRemoveNote}\n          style={[\n            styles.removeTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}>\n          Remove\n        </Text>\n        <Text\n          numberOfLines={this.state.isMoreClicked ? null : 4}\n          style={[\n            styles.textStyle,\n            {\n              fontSize: fontSize,\n            },\n          ]}>\n          {this.props.note.body}\n        </Text>\n        <Text\n          selectable={true}\n          style={[\n            styles.moreTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}\n          onPress={this.onMorePressed}>\n          {!this.state.isMoreClicked ? 'Read more' : 'Show less'}\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  removeTextStyle: {\n    backgroundColor: '#1c1e21',\n    padding: 5,\n    borderRadius: 3,\n    color: 'white',\n    alignSelf: 'flex-end',\n  },\n  textStyle: {\n    color: 'black',\n    letterSpacing: 0.5,\n  },\n  moreTextStyle: {\n    color: '#007599',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default IViewTextView\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text} from 'react-native-elements'\n\nclass IViewCodeView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isMoreClicked: false,\n    }\n  }\n\n  getTextHeight = height => {\n    return height / 4\n  }\n\n  onMorePressed = () => {\n    this.setState({\n      isMoreClicked: !this.state.isMoreClicked,\n    })\n  }\n\n  onRemoveNote = () => {\n    this.props.onNoteRemove(this.props.note)\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getTextHeight(height)\n    const fontSize = height_ / 10\n\n    return (\n      <View\n        style={{\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n          backgroundColor: '#292d3e',\n        }}>\n        <Text\n          onPress={this.onRemoveNote}\n          style={[\n            styles.removeTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}>\n          Remove\n        </Text>\n        <Text\n          numberOfLines={this.state.isMoreClicked ? null : 4}\n          style={[\n            styles.textStyle,\n            {\n              fontSize: fontSize,\n            },\n          ]}>\n          {this.props.note.body}\n        </Text>\n        <Text\n          selectable={true}\n          style={[\n            styles.moreTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}\n          onPress={this.onMorePressed}>\n          {!this.state.isMoreClicked ? 'Read more' : 'Show less'}\n        </Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  removeTextStyle: {\n    backgroundColor: '#1c1e21',\n    padding: 5,\n    borderRadius: 3,\n    color: 'white',\n    alignSelf: 'flex-end',\n  },\n  textStyle: {\n    color: 'white',\n    letterSpacing: 0.5,\n  },\n  moreTextStyle: {\n    color: 'gold',\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default IViewCodeView\n","/* eslint-disable no-template-curly-in-string */\nimport React, {Component} from 'react'\nimport {\n  StyleSheet,\n  View,\n  Linking,\n  Alert,\n  TouchableOpacity,\n  ActivityIndicator,\n} from 'react-native'\nimport {Text, Avatar} from 'react-native-elements'\n\nasync function OpenURL (url) {\n  const supported = await Linking.canOpenURL(url)\n  if (supported) {\n    await Linking.openURL(url)\n  } else {\n    Alert.alert('No app to open this URL: ${url}')\n  }\n}\n\nclass IViewLinkView extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isMounted: false,\n      title: '',\n      description: '',\n      url: '',\n      image: '',\n    }\n  }\n  componentDidMount () {\n    var data = {\n      key: '14f4e0102f66b176837f885406f83d6e',\n      q: this.props.note.body,\n    }\n    fetch('https://api.linkpreview.net', {\n      method: 'POST',\n      mode: 'cors',\n      body: JSON.stringify(data),\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          isMounted: true,\n          title: response.title,\n          description: response.description,\n          url: response.url,\n          image: response.image,\n        })\n      })\n  }\n\n  onPress = () => {\n    OpenURL(this.state.url)\n  }\n\n  getLinkHeight = height => {\n    return height / 8\n  }\n\n  onRemoveNote = () => {\n    this.props.onNoteRemove(this.props.note)\n  }\n\n  render () {\n    const {width, height} = this.props\n    const height_ = this.getLinkHeight(height)\n    const avatarSize = height_ / 2.5\n    const titleAndUrlFontSize = height_ / 6\n\n    const linView = width - avatarSize - 40\n\n    return (\n      <View\n        style={{\n          borderRadius: 5,\n          paddingHorizontal: 10,\n          paddingTop: 5,\n          paddingBottom: 2,\n          backgroundColor: 'transparent',\n        }}>\n        <Text\n          onPress={this.onRemoveNote}\n          style={[\n            styles.removeTextStyle,\n            {\n              fontSize: titleAndUrlFontSize / 1.5,\n            },\n          ]}>\n          Remove\n        </Text>\n        {this.state.isMounted ? (\n          <TouchableOpacity onPress={this.onPress}>\n            <View style={styles.viewStyle}>\n              <Avatar\n                source={{\n                  uri: this.state.image,\n                }}\n                rounded\n                avatarContainerStyle={styles.avatarContainerStyle}\n                size={avatarSize}\n              />\n              <View\n                style={{\n                  marginHorizontal: 10,\n                  width: linView,\n                }}>\n                <Text\n                  numberOfLines={1}\n                  style={[\n                    styles.titleStyle,\n                    {\n                      fontSize: titleAndUrlFontSize,\n                    },\n                  ]}>\n                  {this.state.title}\n                </Text>\n                <Text\n                  numberOfLines={1}\n                  style={[\n                    styles.urlStyle,\n                    {\n                      fontSize: titleAndUrlFontSize,\n                    },\n                  ]}>\n                  {this.state.url}\n                </Text>\n              </View>\n            </View>\n          </TouchableOpacity>\n        ) : (\n          <ActivityIndicator />\n        )}\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  removeTextStyle: {\n    backgroundColor: '#1c1e21',\n    padding: 5,\n    borderRadius: 3,\n    color: 'white',\n    alignSelf: 'flex-end',\n  },\n  avatarContainerStyle: {},\n  viewStyle: {\n    flexDirection: 'row',\n  },\n  urlStyle: {color: '#007599'},\n  titleStyle: {\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  textStyle: {\n    color: '#243447',\n  },\n})\n\nexport default IViewLinkView\n","import React, {Component} from 'react'\nimport {StyleSheet, View} from 'react-native'\nimport {Text, Icon} from 'react-native-elements'\n\nimport FileIcon from '../../custom-icons/icons'\n\nconst lightColorsObject = {\n  a: '#7678ed',\n  b: '#941b0c',\n  s: '#a7c957',\n  d: '#6a6b83',\n  e: '#7b2cbf',\n  f: '#f43f30',\n  g: '#1fa6b8',\n  h: '#ff6b6b',\n  i: '#84a98c',\n  j: '#9f86c0',\n  k: '#ed4f7a',\n  l: '#e63946',\n  m: '#00bbf9',\n  n: '#1a936f',\n  o: '#d08c60',\n  p: '#3bceac',\n  q: '#76949f',\n  r: '#808000',\n  c: '#0067b8',\n  t: '#df7373',\n  u: '#0077b6',\n  v: '#f77f00',\n  w: '#02c39a',\n  x: '#f3722c',\n  y: '#5c677d',\n  z: '#00b4d8',\n  '3': 'yellow',\n  '4': 'purple',\n}\n\nconst files = [\n  '7zip',\n  'aac',\n  'ai',\n  'apk',\n  'asc',\n  'avi',\n  'css',\n  'csv',\n  'dll',\n  'dmg',\n  'dng',\n  'doc',\n  'eps',\n  'exe',\n  'fff',\n  'file',\n  'flv',\n  'gif',\n  'gis',\n  'gpx',\n  'heic',\n  'html',\n  'java',\n  'jp2',\n  'jpg',\n  'kml',\n  'kmz',\n  'mov',\n  'mp3',\n  'mpg',\n  'nmea',\n  'ogg',\n  'osm',\n  'otf',\n  'pdf',\n  'ppt',\n  'ps',\n  'psd',\n  'py',\n  'qti',\n  'rar',\n  'raw',\n  'tar',\n  'tif',\n  'ttf',\n  'txt',\n  'wav',\n  'woff',\n  'xls',\n  'zip',\n]\n\nclass IViewDocView extends Component {\n  getDocHeight = height => {\n    return height / 8\n  }\n\n  getFileExtension = () => {\n    const path = this.props.note.body\n    const extension = path.split('.').pop()\n    if (files.includes(extension.toLowerCase())) {\n      return extension.toLowerCase()\n    } else {\n      return 'file'\n    }\n  }\n\n  getIconColor = () => {\n    const ext = this.getFileExtension()\n    const letter = ext.charAt(ext.length - 1)\n    return lightColorsObject[letter]\n  }\n\n  onRemoveNote = () => {\n    this.props.onNoteRemove(this.props.note)\n  }\n\n  getFileName = () => {\n    let path = this.props.note.body\n    return path.split('/').pop()\n  }\n\n  render () {\n    const {height} = this.props\n    const height_ = this.getDocHeight(height)\n    const fontSize = height_ / 6\n    const iconSize = height_ / 3\n    const iconSizeDownload = height_ / 6\n    return (\n      <View style={styles.viewStyle}>\n        <Text\n          onPress={this.onRemoveNote}\n          style={[\n            styles.removeTextStyle,\n            {\n              fontSize: fontSize / 1.5,\n            },\n          ]}>\n          Remove\n        </Text>\n        <View style={styles.bottomViewStyle}>\n          <FileIcon\n            name={this.getFileExtension()}\n            type='iv-player-icons'\n            size={iconSize}\n            color={this.getIconColor()}\n          />\n          <Text\n            numberOfLines={1}\n            style={[\n              styles.nameStyle,\n              {\n                fontSize: fontSize,\n              },\n            ]}>\n            {this.getFileName()}\n          </Text>\n          <Icon\n            onPress={() => {\n              var link = document.createElement('a')\n              link.download = this.getFileName()\n              link.href = this.props.note.body\n              link.click()\n            }}\n            name='download'\n            type='font-awesome-5'\n            size={iconSizeDownload}\n            color='black'\n          />\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  removeTextStyle: {\n    backgroundColor: '#1c1e21',\n    padding: 5,\n    borderRadius: 3,\n    color: 'white',\n    alignSelf: 'flex-end',\n  },\n  bottomViewStyle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  nameStyle: {\n    color: 'black',\n    marginLeft: 10,\n    flexGrow: 1,\n  },\n  viewStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingTop: 5,\n    paddingBottom: 2,\n    backgroundColor: 'transparent',\n  },\n  imageStyle: {\n    resizeMode: 'contain',\n  },\n})\n\nexport default IViewDocView\n","module.exports = __webpack_public_path__ + \"static/media/iv-player-icons.2a07a263.ttf\";","import React, {Component} from 'react'\nimport {StyleSheet} from 'react-native'\nimport {Text} from 'react-native-elements'\n\nclass IViewTextView extends Component {\n  constructor (params) {\n    super(params)\n    this.state = {\n      isMoreClicked: false,\n    }\n  }\n\n  getTextHeight = height => {\n    return height / 4\n  }\n\n  onMorePressed = () => {\n    this.setState({\n      isMoreClicked: !this.state.isMoreClicked,\n    })\n  }\n\n  getSecondsInReadableFormat = () => {\n    const sec_num = this.props.timePoint / 1000\n    var hours = Math.floor(sec_num / 3600)\n    var minutes = Math.floor((sec_num - hours * 3600) / 60)\n    var seconds = sec_num - hours * 3600 - minutes * 60\n\n    if (hours < 10) {\n      hours = '0' + hours\n    }\n    if (minutes < 10) {\n      minutes = '0' + minutes\n    }\n    if (seconds < 10) {\n      seconds = '0' + seconds\n    }\n    return hours + ':' + minutes + ':' + seconds\n  }\n\n  render () {\n    return (\n      <Text\n        onPress={() => {\n          this.props.onTimePointPress(this.props.timePoint)\n        }}\n        style={[\n          styles.timepointStyle,\n          {\n            fontSize: this.props.timeStampSize,\n            padding: this.props.timeStampSize / 5,\n            color: this.props.color ? this.props.color : 'grey',\n          },\n        ]}>\n        {' '}\n        {this.getSecondsInReadableFormat()}{' '}\n      </Text>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  timepointStyle: {\n    alignSelf: 'flex-end',\n  },\n})\n\nexport default IViewTextView\n"],"sourceRoot":""}